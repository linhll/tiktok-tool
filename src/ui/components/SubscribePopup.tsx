import styled from "@emotion/styled";
import {
  Button,
  Checkbox,
  Dialog,
  DialogActions,
  DialogContent,
  DialogTitle,
  FormControlLabel,
  Typography,
} from "@mui/material";
import { SubscriptionPlan, UserSubscription } from "@ui/models/subscription";
import { formatPeriod, toCurrency } from "@ui/utils/formatter";
import React from "react";

type Props = {
  currentPlan?: SubscriptionPlan;
  currentSubscription?: UserSubscription | null;
  selectedPlan?: SubscriptionPlan;
};

type State = {
  open: boolean;
  isAgreed: boolean;
};

const initState = Object.freeze<State>({
  open: false,
  isAgreed: false,
});

export default class SubscribePopup extends React.Component<Props, State> {
  state = initState;

  public show = () => {
    this.setState({ open: true });
  };

  private _hide = () => {
    this.setState({ open: false, isAgreed: false });
  };

  private _onIsAgreedCheckboxChange = (
    ev: React.ChangeEvent<HTMLInputElement>,
    checked: boolean
  ) => {
    this.setState({
      isAgreed: checked,
    });
  };

  render(): React.ReactNode {
    return (
      <Dialog open={this.state.open}>
        <DialogTitle>
          {this.props.currentSubscription
            ? "Thay ƒë·ªïi k·∫ø ho·∫°ch"
            : "Ch·ªçn k·∫ø ho·∫°ch"}
        </DialogTitle>
        <DialogContent>
          {this.props.currentPlan &&
          this.props.currentSubscription &&
          this.props.selectedPlan ? (
            <Typography>
              B·∫°n ƒëang s·ª≠ d·ª•ng {this.props.currentPlan.title} v·ªõi m·ª©c ti√™u hao{" "}
              {toCurrency(this.props.currentPlan.price)}ü•î/
              {formatPeriod(this.props.currentPlan.period)}. B·∫°n c√≥ mu·ªën thay
              ƒë·ªïi sang d√πng {this.props.selectedPlan.title} v·ªõi m·ª©c ti√™u hao{" "}
              {toCurrency(this.props.selectedPlan.price)}ü•î/
              {formatPeriod(this.props.selectedPlan.period)} kh√¥ng?
            </Typography>
          ) : this.props.selectedPlan ? (
            <Typography>
              B·∫°n c√≥ mu·ªën s·ª≠ d·ª•ng {this.props.selectedPlan.title} v·ªõi m·ª©c ti√™u
              hao {toCurrency(this.props.selectedPlan.price)}ü•î/
              {formatPeriod(this.props.selectedPlan.period)} kh√¥ng?
            </Typography>
          ) : null}
          <PolicyContainer>
            <ul>
              <li>
                Sau khi ƒëƒÉng k√Ω, n√¢ng c·∫•p th√†nh c√¥ng, k·∫ø ho·∫°ch c·ªßa b·∫°n s·∫Ω c√≥
                hi·ªáu l·ª±c ngay l·∫≠p t·ª©c.
              </li>
              <li>
                B·∫°n kh√¥ng th·ªÉ h·∫° c·∫•p sau khi n√¢ng c·∫•p. N·∫øu mu·ªën h·∫° c·∫•p h√£y hu·ª∑
                gia h·∫°n g√≥i hi·ªán t·∫°i v√† ƒëƒÉng k√Ω l·∫°i g√≥i h·∫° c·∫•p v√†o l·∫ßn thanh
                to√°n ti·∫øp theo.
              </li>
              <li>
                Khi n√¢ng c·∫•p, k·∫ø ho·∫°ch hi·ªán t·∫°i s·∫Ω b·ªã hu·ª∑, k·∫ø ho·∫°ch m·ªõi s·∫Ω c√≥
                hi·ªáu l·ª±c ngay l·∫≠p t·ª©c. S·ªë l∆∞∆°ng th·ª±c ti√™u hao s·∫Ω ƒë∆∞·ª£c ƒë·ªÅn b√π
                theo t·ª∑ l·ªá s·ªë ng√†y c√≤n l·∫°i/ t·ªïng s·ªë ng√†y thanh to√°n ngay sau khi
                k·∫ø ho·∫°ch c≈© b·ªã hu·ª∑.
              </li>
              <li>
                Ch√∫ng t√¥i kh√¥ng gi·∫£i quy·∫øt m·ªçi v·∫•n ƒë·ªÅ li√™n quan ƒë·∫øn l·ªói ng∆∞·ªùi
                d√πng.
              </li>
              <li>
                M·ªçi th·∫Øc m·∫Øc vui l√≤ng li√™n h·ªá SƒêT: 0582110512 ƒë·ªÉ ƒë∆∞·ª£c h·ªó tr·ª£
                tr·ª±c ti·∫øp.
              </li>
            </ul>
          </PolicyContainer>
          <FormControlLabel
            control={
              <Checkbox
                size="small"
                checked={this.state.isAgreed}
                onChange={this._onIsAgreedCheckboxChange}
              />
            }
            label="T√¥i ƒë√£ ƒë·ªçc v√† ƒë·ªìng √Ω v·ªõi c√°c n·ªôi dung tr√™n."
          />
        </DialogContent>
        <DialogActions>
          <Button color="inherit" size="small" onClick={this._hide}>
            ƒê√≥ng
          </Button>
          <Button
            color="primary"
            variant="contained"
            size="small"
            onClick={this._hide}
          >
            {this.props.currentSubscription ? "N√¢ng c·∫•p" : "ƒêƒÉng k√Ω"}
          </Button>
        </DialogActions>
      </Dialog>
    );
  }
}

const PolicyContainer = styled.div`
  height: 250px;
  overflow-y: auto;
`;
